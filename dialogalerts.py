# -*-coding: utf-8-*-
# Form implementation generated from reading ui file '.\dialogalerts.ui'
#
# Created by: PyQt6 UI code generator 6.6.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from api_control import currency_list
import alerts_control
import re
import os
from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_DialogAlerts(object):
    def setupUi(self, DialogAlerts):
        DialogAlerts.setObjectName("DialogAlerts")
        DialogAlerts.resize(400, 300)
        DialogAlerts.setMinimumSize(QtCore.QSize(400, 300))
        DialogAlerts.setMaximumSize(QtCore.QSize(400, 300))
        self.table_alerts = QtWidgets.QTableWidget(parent=DialogAlerts)
        self.table_alerts.setGeometry(QtCore.QRect(10, 51, 381, 201))
        self.table_alerts.setObjectName("table_alerts")
        self.table_alerts.setColumnCount(0)
        self.table_alerts.setRowCount(0)
        self.horizontalLayoutWidget = QtWidgets.QWidget(parent=DialogAlerts)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(9, 10, 381, 31))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.combo_add = QtWidgets.QComboBox(parent=self.horizontalLayoutWidget)
        self.combo_add.setObjectName("combo_add")
        self.horizontalLayout.addWidget(self.combo_add)
        self.line_add = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget)
        self.line_add.setMaximumSize(QtCore.QSize(150, 16777215))
        self.line_add.setObjectName("line_add")
        self.horizontalLayout.addWidget(self.line_add)
        self.button_add = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        self.button_add.setMinimumSize(QtCore.QSize(0, 22))
        self.button_add.setMaximumSize(QtCore.QSize(80, 16777215))
        self.button_add.setObjectName("button_add")
        self.horizontalLayout.addWidget(self.button_add)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(parent=DialogAlerts)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(140, 260, 250, 31))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.button_delete = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_2)
        self.button_delete.setMinimumSize(QtCore.QSize(0, 22))
        self.button_delete.setObjectName("button_delete")
        self.horizontalLayout_2.addWidget(self.button_delete)
        self.button_save = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_2)
        self.button_save.setMinimumSize(QtCore.QSize(0, 22))
        self.button_save.setObjectName("button_save")
        self.horizontalLayout_2.addWidget(self.button_save)
        self.button_back = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_2)
        self.button_back.setEnabled(True)
        self.button_back.setMinimumSize(QtCore.QSize(0, 22))
        self.button_back.setObjectName("button_back")
        self.horizontalLayout_2.addWidget(self.button_back)

        self.retranslateUi(DialogAlerts)
        QtCore.QMetaObject.connectSlotsByName(DialogAlerts)

        self.button_add.clicked.connect(self.add_clicked)
        self.button_delete.clicked.connect(self.delete_clicked)
        self.button_back.clicked.connect(DialogAlerts.close)
        self.button_save.clicked.connect(self.save_clicked)
        for i in currency_list:
            self.combo_add.addItem(i.iso.upper())
        self.formatTable()

    def retranslateUi(self, DialogAlerts):
        _translate = QtCore.QCoreApplication.translate
        DialogAlerts.setWindowTitle(_translate("DialogAlerts", "Dialog"))
        self.button_add.setText(_translate("DialogAlerts", "Add"))
        self.button_delete.setText(_translate("DialogAlerts", "Delete"))
        self.button_save.setText(_translate("DialogAlerts", "Save"))
        self.button_back.setText(_translate("DialogAlerts", "Back"))

    def formatTable(self):
        alerts_data = alerts_control.get_alerts()  # 0 - iso, 1 - alert, 2 - prize, 3 - status
        self.table_alerts.setColumnCount(4)
        # set fixed width
        self.table_alerts.setColumnWidth(0, 100)
        self.table_alerts.setColumnWidth(1, 75)
        self.table_alerts.setColumnWidth(2, 75)
        self.table_alerts.setColumnWidth(3, 100)
        self.table_alerts.setHorizontalHeaderLabels(["ISO", "Alert", "Prize", "Status"])
        self.table_alerts.setSortingEnabled(True)
        for i in range(len(alerts_data)):
            self.table_alerts.insertRow(i)
            self.table_alerts.setItem(i, 0, QtWidgets.QTableWidgetItem(alerts_data[i][0]))
            self.table_alerts.setItem(i, 1, QtWidgets.QTableWidgetItem(str(alerts_data[i][1])))
            self.table_alerts.setItem(i, 2, QtWidgets.QTableWidgetItem(str(alerts_data[i][2])))
            self.table_alerts.setItem(i, 3, QtWidgets.QTableWidgetItem(alerts_data[i][3]))


    def add_clicked(self):
        if re.search("[0-9]+\.[0-9]+", self.line_add.text()) or re.search("[0-9]+", self.line_add.text()):
            for i in currency_list:
                if i.iso == self.combo_add.currentText():
                    actual_price = i.buy
                    if actual_price >= float(self.line_add.text()):
                        status = "Above"
                    else:
                        status = "Below"
            row = self.table_alerts.rowCount()
            self.table_alerts.insertRow(row)
            self.table_alerts.setItem(row, 0, QtWidgets.QTableWidgetItem(self.combo_add.currentText()))
            self.table_alerts.setItem(row, 1, QtWidgets.QTableWidgetItem(str(round(float(self.line_add.text()), 2))))
            self.table_alerts.setItem(row, 2, QtWidgets.QTableWidgetItem(str(actual_price)))
            self.table_alerts.setItem(row, 3, QtWidgets.QTableWidgetItem(status))
            self.line_add.clear()


    def delete_clicked(self):
        self.table_alerts.removeRow(self.table_alerts.currentRow())



    def save_clicked(self):
        project_path = os.getcwd()
        with open(project_path + "/alerts.txt", "w+") as file:
            for i in range(self.table_alerts.rowCount()):
                file.write(self.table_alerts.item(i, 0).text() + ";" + self.table_alerts.item(i, 1).text() + ';\n')